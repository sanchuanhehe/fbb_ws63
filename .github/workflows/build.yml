name: Build and Compile

on:
  push:
    branches:
      - main
      - dev
      - feature*
      - master
  pull_request:
    branches:
      - main
      - dev
      - feature*
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('src/config.sh', '.devcontainer/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build development environment image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .devcontainer/Dockerfile
        tags: ws63-build-env:latest
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Build and Compile in Docker
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspaces/$(basename ${{ github.workspace }}) \
          -w /workspaces/$(basename ${{ github.workspace }})/src \
          ws63-build-env:latest \
          bash -c "source ./activate_env.sh && ./build.py -c -ninja ws63-liteos-app"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: standard-ws63
        path: src/output/ws63/fwpkg