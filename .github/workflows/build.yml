name: Build and Compile

on:
  push:
    branches:
      - main
      - dev
      - feature*
      - master
  pull_request:
    branches:
      - main
      - dev
      - feature*
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          src/.venv
        key: ${{ runner.os }}-deps-${{ hashFiles('src/config.sh') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Prepare APT cache directory
      run: |
        sudo mkdir -p /tmp/apt-cache
        sudo chown -R $USER:$USER /tmp/apt-cache

    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: /tmp/apt-cache
        key: ${{ runner.os }}-apt-${{ hashFiles('src/config.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Configure APT cache
      run: |
        sudo tee /etc/apt/apt.conf.d/01cache <<EOF
        Dir::Cache "/tmp/apt-cache";
        Dir::Cache::archives "/tmp/apt-cache/archives";
        APT::Keep-Downloaded-Packages "true";
        EOF

    - name: Cache APT lists
      uses: actions/cache@v4
      with:
        path: |
          /var/lib/apt/lists
        key: ${{ runner.os }}-apt-lists-${{ hashFiles('src/config.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-lists-

    - name: Install dependencies and configure environment
      run: |
        cd src
        chmod +x config.sh activate_env.sh
        ./config.sh

    - name: Build and Compile
      run: |
        cd src
        source ./activate_env.sh
        ./build.py -c -ninja ws63-liteos-app

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: standard-ws63
        path: src/output/ws63/fwpkg